" Make vim more useful
set nocompatible

" Plug
call plug#begin('~/.vim/plugged')

Plug '/usr/local/opt/fzf'
Plug 'junegunn/fzf.vim'
Plug 'itchyny/lightline.vim'
Plug 'NLKNguyen/papercolor-theme'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-rsi'
Plug 'w0rp/ale'
Plug 'rust-lang/rust.vim', { 'for': 'rust' }
Plug 'racer-rust/vim-racer', { 'for': 'rust' }
Plug 'sebastianmarkow/deoplete-rust', { 'for': 'rust' }
Plug 'Shougo/deoplete.nvim'
Plug 'roxma/nvim-yarp'
Plug 'roxma/vim-hug-neovim-rpc'
Plug 'chrisbra/NrrwRgn'

call plug#end()

" Leader
let mapleader='\'
map <SPACE> <leader> 

" UI
syntax on
let g:lightline = { 'colorscheme': 'PaperColor' }
colorscheme PaperColor
set background=dark
set number
set relativenumber
set title
set laststatus=2
set ruler
set noerrorbells
set scrolloff=1

" Search
set hlsearch
set ignorecase
set smartcase
set incsearch
set wrapscan

" Common settings
set autoread
set formatoptions+=j " Delete comment character when joining commented lines
set autoindent " Copy indent from last line when starting new line
set backspace=indent,eol,start
set diffopt+=iwhite " Ignore whitespace changes (focus on code changes)
set encoding=utf-8 nobomb " BOM often causes trouble
set expandtab " Expand tabs to spaces
set hidden " When a buffer is brought to foreground, remember undo history and marks
set nojoinspaces " Only insert single space after a '.', '?' and '!' with a join command
set shiftwidth=2 " The # of spaces for indenting
set smarttab " At start of line, <Tab> inserts shiftwidth spaces, <Bs> deletes shiftwidth spaces
set softtabstop=2 " Tab key results in 2 spaces
set suffixes=.bak,~,.swp,.swo,.o,.d,.info,.aux,.log,.dvi,.pdf,.bin,.bbl,.blg,.brf,.cb,.dmg,.exe,.ind,.idx,.ilg,.inx,.out,.toc,.pyc,.pyd,.dll
set undofile " Persistent Undo

" Wildmenu
set wildmenu
set wildignore+=.DS_Store
set wildignore+=*.jpg,*.jpeg,*.gif,*.png,*.gif,*.psd,*.o,*.obj
set wildignore+=*/bower_components/*,*/node_modules/*
set wildignore+=*/smarty/*,*/vendor/*,*/.git/*,*/.hg/*,*/.svn/*,*/.sass-cache/*,*/log/*,*/tmp/*,*/build/*,*/ckeditor/*,*/doc/*,*/source_maps/*,*/dist/*
set wildmode=list:full

" Toggle show tabs and trailing spaces (,c)
set lcs=tab:›\ ,trail:·,eol:¬,nbsp:_
set fcs=fold:-
nnoremap <silent> <leader>c :set nolist!<CR>

" Yank from cursor to end of line
nnoremap Y y$

" FZF
nnoremap <leader>ff :GFiles<CR>

" Completions
set complete-=i
set completeopt-=preview

let g:deoplete#enable_at_startup = 1

if has('path_extra')
  setglobal tags-=./tags tags-=./tags; tags^=./tags;
endif

" Rust
let g:rustfmt_autosave = 1

let g:racer_cmd = "/Users/foxmk/.cargo/bin/racer"
let g:racer_experimental_completer = 1

let g:deoplete#sources#rust#racer_binary='/Users/foxmk/.cargo/bin/racer'
let g:deoplete#sources#rust#rust_source_path= '/Users/foxmk/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/src'
