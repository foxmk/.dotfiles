" Make vim more useful
set nocompatible

" Plug
call plug#begin('~/.vim/plugged')

Plug '/usr/local/opt/fzf'
Plug 'junegunn/fzf.vim'

Plug 'ajh17/Spacegray.vim'
Plug 'itchyny/lightline.vim'

Plug 'chrisbra/NrrwRgn'
Plug 'janko-m/vim-test'
Plug 'jiangmiao/auto-pairs'
Plug 'justinmk/vim-sneak'
Plug 'ludovicchabant/vim-gutentags'
Plug 'maralla/completor.vim'
Plug 'mattn/emmet-vim'
Plug 'mileszs/ack.vim'
Plug 'romainl/vim-qf'
Plug 'sheerun/vim-polyglot'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-dispatch'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-rsi'
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-speeddating'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-unimpaired'
Plug 'tpope/vim-vinegar'

" Plug 'SirVer/ultisnips'
" Plug 'honza/vim-snippets'

Plug 'racer-rust/vim-racer', { 'for': 'rust' }

call plug#end()

" Settings
set background=dark
colorscheme spacegray

set splitright
set splitbelow
set number
set relativenumber
set noshowmode
set hlsearch
set ignorecase
set smartcase
set wrapscan
set wildignore+=.DS_Store

set title
set noerrorbells
set diffopt+=iwhite " Ignore whitespace changes (focus on code changes)
set expandtab " Expand tabs to spaces
set hidden " When a buffer is brought to foreground, remember undo history and marks
set nojoinspaces " Only insert single space after a '.', '?' and '!' with a join command
set shiftwidth=2 " The # of spaces for indenting
set softtabstop=2 " Tab key results in 2 spaces
set suffixes=.bak,~,.swp,.swo,.o,.d,.info,.aux,.log,.dvi,.pdf,.bin,.bbl,.blg,.brf,.cb,.dmg,.exe,.ind,.idx,.ilg,.inx,.out,.toc,.pyc,.pyd,.dll
set undofile " Persistent Undo

" Leader
let mapleader=' '
nnoremap <Space> <Nop>

" Toggle show tabs and trailing spaces (,c)
set lcs=tab:›\ ,trail:·,eol:¬,nbsp:_
set fcs=fold:-
nnoremap <silent> <leader>c :set nolist!<CR>

" Yank from cursor to end of line
nnoremap Y y$

" FZF
nnoremap <leader>pf :GFiles<CR>
nnoremap <leader>e :Files<CR>
nnoremap <leader>fs :w<CR>

" Auto pairs
let g:AutoPairsFlyMode = 1

" Testing
let test#strategy = "dispatch"
nnoremap <leader>ta :TestSuite<cr>
nnoremap <leader>tf :TestFile<cr>
nnoremap <leader>tn :TestNearest<cr>
nnoremap <leader>tt :TestLast<cr>
nnoremap <leader>te :TestVisit<cr>
